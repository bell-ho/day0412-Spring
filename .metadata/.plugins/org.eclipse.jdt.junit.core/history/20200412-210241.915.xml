<?xml version="1.0" encoding="UTF-8"?><testrun name="BoardServiceTests" project="ex02" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="org.zerock.service.BoardServiceTests.BoardServiceTests" time="0.252">
    <testcase name="testRegister" classname="org.zerock.service.BoardServiceTests.BoardServiceTests" time="0.252">
      <error>org.springframework.jdbc.BadSqlGrammarException: Error selecting key or setting result to parameter object. Cause: java.sql.SQLSyntaxErrorException: ORA-02289: 시퀀스가 존재하지 않습니다.

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-02289: 시퀀스가 존재하지 않습니다.
&#13;
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)&#13;
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)&#13;
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)&#13;
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)&#13;
	at com.sun.proxy.$Proxy21.insert(Unknown Source)&#13;
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)&#13;
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)&#13;
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)&#13;
	at com.sun.proxy.$Proxy22.insertSelectKey(Unknown Source)&#13;
	at org.zerock.service.BoardServiceImpl.register(BoardServiceImpl.java:26)&#13;
	at org.zerock.service.BoardServiceTests.BoardServiceTests.testRegister(BoardServiceTests.java:36)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)&#13;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
Caused by: java.sql.SQLSyntaxErrorException: ORA-02289: 시퀀스가 존재하지 않습니다.
&#13;
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)&#13;
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)&#13;
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1052)&#13;
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:537)&#13;
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:255)&#13;
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:610)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:253)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:86)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:765)&#13;
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:921)&#13;
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1099)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3640)&#13;
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1384)&#13;
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3752)&#13;
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)&#13;
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)&#13;
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)&#13;
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)&#13;
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)&#13;
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)&#13;
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)&#13;
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)&#13;
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)&#13;
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)&#13;
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)&#13;
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)&#13;
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)&#13;
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)&#13;
	at org.apache.ibatis.executor.statement.BaseStatementHandler.&lt;init&gt;(BaseStatementHandler.java:63)&#13;
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.&lt;init&gt;(PreparedStatementHandler.java:40)&#13;
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.&lt;init&gt;(RoutingStatementHandler.java:46)&#13;
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)&#13;
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)&#13;
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)&#13;
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)&#13;
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)&#13;
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)&#13;
	... 38 more&#13;
Caused by: Error : 2289, Position : 7, Sql = select seq_board.nextval from dual, OriginalSql = select seq_board.nextval from dual, Error Msg = ORA-02289: 시퀀스가 존재하지 않습니다.
&#13;
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)&#13;
	... 79 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
