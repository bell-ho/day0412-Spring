package org.zerock.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.zerock.domain.BoardVo;
import org.zerock.mapper.BoardMapper;

import lombok.AllArgsConstructor;
import lombok.Setter;
import lombok.extern.log4j.Log4j;

@Log4j
@Service
@AllArgsConstructor 
//@AllArgsContstructor는 모든 파라미터를 이용하는 생성자를 만든다
public class BoardServiceImpl implements BoardService {
	@Setter(onMethod_ =@Autowired )
	private BoardMapper mapper;

	@Override
	public void register(BoardVo board) {
		// TODO Auto-generated method stub
		log.info("등록....등록....등록....등록....등록....등록...."+board);
		
		mapper.insertSelectKey(board);
	}

	@Override
	public BoardVo get(Long bno) {
		// TODO Auto-generated method stub
		
		log.info("get........."+bno);
		return mapper.read(bno);
	}

	@Override
	public boolean modify(BoardVo board) {
		// TODO Auto-generated method stub
		
		log.info("modify......"+board);
		return mapper.update(board)==1;
	}

	@Override
	public boolean remove(Long bno) {
		// TODO Auto-generated method stub
		log.info("remove......"+bno);
		return mapper.delete(bno)==1;
	}

	@Override
	public List<BoardVo> getList() {
		// TODO Auto-generated method stub
		
		log.info("getList...........");
		return mapper.getList();

		//list( )는 나중에 게시물의 목록을 전달해야 하므로 Model을 파라미터로 지정하고，
		//이를 통해서 BoardServiceImpl 객체의 getList( ) 결과를 담아 전달합니다(addAttribute). 
		//BoardController 테스트는 스프링의 테스트 기능을 통해서 확인해 볼 수 있습니다. 
	}
}
